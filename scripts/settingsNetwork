#!/bin/sh
#
#
##########################




LAN_PROTO=""
LAN_IP=""
LAN_NETMASK=""

WAN_PROTO=""
WAN_IP=""
WAN_NETMASK=""
WAN_GATEWAY=""
WAN_DNS=""


#
# $(1) proto 
# $(2) ip
# $(3) netmask
# $(4) gateway
# $(5) dns
#
set_network_wan()
{
     WAN_PROTO=$1
     WAN_IP=$2
     WAN_NETMASK=$3
     WAN_GATEWAY=$4
     WAN_DNS=$5
     
     if [ "$WAN_PROTO" == "" ]
      then
        return 1
     fi
     uci set network.wan.proto=$WAN_PROTO
     if [ $? -ne 0 ] 
     then
       return 2
     fi
     uci set network.wan.ipaddr=$WAN_IP
     if [ $? -ne 0 ] 
     then
       return 3
     fi
     uci set network.wan.netmask=$WAN_NETMASK
     if [ $? -ne 0 ] 
     then
       return 4
     fi
     uci set network.wan.gateway=$WAN_GATEWAY
     if [ $? -ne 0 ] 
     then
       return 5
     fi
     uci set network.wan.dns=$WAN_DNS
     if [ $? -ne 0 ] 
     then
       return 6
     fi
     uci commit network
     if [ $? -ne 0 ] 
     then
       return 1
     fi
     return 0     
}


#
# $(1) proto 
# $(2) ip
# $(3) netmask
#
set_network_lan()
{
    LAN_PROTO=$1
    LAN_IP=$2
    LAN_NETMASK=$3
    
    if [ "$LAN_PROTO" == "" ]
    then
       return 1
    fi
    uci set network.lan.proto=$LAN_PROTO
    if [ $? -ne 0 ] 
    then
       return 2
    fi
    uci set network.lan.ipaddr=$LAN_IP
    if [ $? -ne 0 ] 
    then
       return 3
    fi
    uci set network.lan.netmask=$LAN_NETMASK
    if [ $? -ne 0 ] 
    then
       return 4
    fi
    uci commit network
    if [ $? -ne 0 ] 
    then
       return 1
    fi
    return 0 
}

#
# $(1) seting type: lan,wan
#
set_network()
{
      if [ "$1" == "wan" ] 
      then
        return set_network_wan $2 $3 $4 $5 $6
      fi
      
      if [ "$1" == "lan" ] 
      then
        return set_network_lan $2 $3 $4
      fi
      
      return 1      
}

#
# $(1) interface: wan|lan
#
network_restart()
{
   ifdown $1
   if [ $? -ne 0 ] 
   then
    return 1
   fi
   sleep 1
   ifup $1
   if [ $? -ne 0 ] 
   then
    return 2
   fi
   return 0;
}

main()
{
   set_network $1 $2 $3 $4 $5 $6
   if [ $? -eq 0 ] 
   then
     set_network $1
     echo $?
     return
   fi
   echo $?
}


main

